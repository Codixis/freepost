<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
    // Retrieve a list of newest comments sorted by vote
    public function findHot($post = NULL)
    {
        if (is_null($post))
            return NULL;
        
        $em = $this->getEntityManager();

        return $em->createQuery(
            'SELECT c
            FROM AppBundle:Comment c
            JOIN c.user u
            JOIN c.post p
            WHERE c.post = :postId
            ORDER BY c.vote DESC, c.created DESC'
        )
        ->setParameter('postId', $post->getId())
        ->getResult();
    }
    
    // Get user comments
    public function findComments($user = NULL)
    {
        $em = $this->getEntityManager();

        return $em->createQuery(
            'SELECT c
            FROM AppBundle:Comment c
            WHERE c.user = :user
            ORDER BY c.created DESC'
        )
        ->setParameter('user', $user)
        ->setMaxResults(100)
        ->getResult();
    }
    
    // Get replies to user comments
    public function findReplies($user = NULL)
    {
        $em = $this->getEntityManager();

        return $em->createQuery(
            'SELECT c
            FROM AppBundle:Comment c
            WHERE c.parentUser = :user AND c.user != :user
            ORDER BY c.created DESC'
        )
        ->setParameter('user', $user)
        ->setMaxResults(100)
        ->getResult();
    }
    
    // Set replies as "read"
    public function setRepliesAsRead($user = NULL)
    {
        $em = $this->getEntityManager();

        $em->createQuery(
            'UPDATE AppBundle:Comment c
            SET c.read = 1
            WHERE c.parentUser = :user AND c.read = 0'
        )
        ->setParameter('user', $user)
        ->execute();
    }
    
    // Find how many replies are still unread
    public function findNumberOfUnreadReplies($user = NULL)
    {
        $em = $this->getEntityManager();

        return $em->createQuery(
            'SELECT COUNT(c)
            FROM AppBundle:Comment c
            WHERE c.parentUser = :user AND c.user != :user AND c.read = 0'
        )
        ->setParameter('user', $user)
        ->getSingleScalarResult();
    }
    
    public function submitNew(&$post, &$parentComment, &$user, &$text)
    {
        $em = $this->getEntityManager();
        $datetime = new \DateTime();

        $c = new Comment();
        $c->setPost($post);
        $c->setParent($parentComment);
        $c->setParentUser(is_null($parentComment) ? $post->getUser() : $parentComment->getUser());
        $c->setUser($user);
        $c->setText($text);
        $c->setCreated($datetime);
        $c->setDateCreated($datetime);
        // If it's a reply to myself, don't mark it as "unread"
        ($c->getParent()->getId() == $user->getId()) && $c->setRead();
        
        $post->increaseCommentsCount();
        
        $em->persist($c);
        $em->persist($post);

        $em->flush();
        
        return $c;
    }
}
